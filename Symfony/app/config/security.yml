security:
    encoders:
        #health\healthUserBundle\Entity\Users:
<<<<<<< HEAD

           # algorithm: bcrypt
           #algorithm: bcrypt

=======
            #algorithm: bcrypt
>>>>>>> FETCH_HEAD
        Symfony\Component\Security\Core\User\User: plaintext

    role_hierarchy:
        ROLE_ADMIN:       ROLE_USER
        ROLE_SUPER_ADMIN: [ROLE_USER, ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH]

    providers:
        #administrators:
<<<<<<< HEAD

            #entity:{class: healthUserBundle:Users, property: username}
        in_memory:
                    memory:
                        users:
                            user:  { password: userpass, roles: [ 'ROLE_USER' ] }
                            admin: { password: adminpass, roles: [ 'ROLE_ADMIN' ] }

    firewalls:
        #admin_area:
            #pattern: ^/admin

           # entity:{class: healthUserBundle:Users, property: username}
        in_memory:
            memory:
                users:
                   user:  { password: userpass, roles: [ 'ROLE_USER' ] }
                   admin: { password: adminpass, roles: [ 'ROLE_ADMIN' ] }

    firewalls:
        #admin_area:
           # pattern: ^/admin

=======
            #entity:{class: healthUserBundle:Users, property: username}
        in_memory:
            memory:
               users:
                    user:  { password: userpass, roles: [ 'ROLE_USER' ] }
                    admin: { password: adminpass, roles: [ 'ROLE_ADMIN' ] }

    firewalls:
        #admin_area:
            #pattern: ^/admin
>>>>>>> FETCH_HEAD
            #http_basic: ~
        dev:
            pattern:  ^/(_(profiler|wdt)|css|images|js)/
            security: false

        login:
            pattern:  ^/demo/secured/login$
            security: false

        secured_area:
            pattern:    ^/demo/secured/
            form_login:
                check_path: _security_check
                login_path: _demo_login
            logout:
<<<<<<< HEAD
               path: _demo_logout
               target: _demo

                path:   _demo_logout
                target: _demo

=======
                path:   _demo_logout
                target: _demo
>>>>>>> FETCH_HEAD
            #anonymous: ~
            #http_basic:
            #    realm: "Secured Demo Area"

    access_control:
        #-{path: ^/admin, roles:ROLE_ADMIN}
        - { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY, requires_channel: https }
